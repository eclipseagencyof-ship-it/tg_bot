import logging
import os
from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env
load_dotenv()
API_TOKEN = os.getenv("BOT_TOKEN")

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ë–æ—Ç –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä —Å –ø–∞–º—è—Ç—å—é –¥–ª—è FSM
bot = Bot(token=API_TOKEN)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)


# --- –°–æ—Å—Ç–æ—è–Ω–∏—è ---
class Form(StatesGroup):
    waiting_for_name = State()
    waiting_for_onlyfans = State()


# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
btn_conditions = KeyboardButton("‚≠ê–ú–Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç —É—Å–ª–æ–≤–∏—è‚≠ê")
keyboard_conditions = ReplyKeyboardMarkup(resize_keyboard=True).add(btn_conditions)

btn_yes = KeyboardButton("–î–∞")
btn_no = KeyboardButton("–ù–µ—Ç")
keyboard_yes_no = ReplyKeyboardMarkup(resize_keyboard=True).add(btn_yes, btn_no)


# --- –•–µ–Ω–¥–ª–µ—Ä—ã ---
@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    # –ü–µ—Ä–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
    if os.path.exists("welcome.jpg"):
        with open("welcome.jpg", "rb") as photo:
            await bot.send_photo(
                chat_id=message.chat.id,
                photo=photo,
                caption=(
                    "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ *Eclipse Agency!* üåë\n\n"
                    "–Ø –±—É–¥—É —Ç–≤–æ–∏–º –ª–∏—á–Ω—ã–º –≥–∏–¥–æ–º –≤ –æ—Å–≤–æ–µ–Ω–∏–∏ —Ä–æ–ª–∏ *–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞* ‚Äî —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞, "
                    "–∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç –≤—ã—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Å–≤—è–∑—å, —É–¥–µ—Ä–∂–∏–≤–∞—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –ø—Ä–µ–≤—Ä–∞—â–∞—Ç—å –¥–∏–∞–ª–æ–≥ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.\n\n"
                    "–ê —Ç–µ–ø–µ—Ä—å —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è:\n\n"
                    "üí∞ 20% –æ—Ç –≤—Å–µ—Ö –ø—Ä–æ–¥–∞–∂\n"
                    "üïó –ì–∏–±–∫–∏–π 8-—á–∞—Å–æ–≤–æ–π –≥—Ä–∞—Ñ–∏–∫\n"
                    "üìÜ 1 –≤—ã—Ö–æ–¥–Ω–æ–π –≤ –Ω–µ–¥–µ–ª—é\n"
                    "üí∏ –í—ã–ø–ª–∞—Ç—ã ‚Äî 7 –∏ 22 —á–∏—Å–ª–∞ (USDT)\n"
                    "‚ö†Ô∏è –ö–æ–º–∏—Å—Å–∏—è –∑–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—é (~5%) –Ω–µ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç—Å—è –∞–≥–µ–Ω—Ç—Å—Ç–≤–æ–º"
                ),
                parse_mode="Markdown"
            )
    else:
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ Eclipse Agency! üåë")

    # –í—Ç–æ—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É—Å–ª–æ–≤–∏—è–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π
    await bot.send_message(
        chat_id=message.chat.id,
        text=(
            "–ü–æ—á–µ–º—É –∏–º–µ–Ω–Ω–æ —Ç–∞–∫–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤—ã–µ —É—Å–ª–æ–≤–∏—è?\n\n"
            "üìà –ü–æ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ ‚Äî –¥–æ 23% –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ KPI\n"
            "üë• –†–æ–ª—å Team Lead ‚Äî +1% –æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã (3 —á–µ–ª–æ–≤–µ–∫–∞)\n"
            "üéØ –ë–æ–Ω—É—Å—ã –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è ‚Äî –≤—ã–ø–ª–∞—Ç—ã –∑–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—É\n"
            "üöÄ –ö–∞—Ä—å–µ—Ä–Ω—ã–π —Ä–æ—Å—Ç ‚Äî –æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n\n"
            "–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –µ—Å–ª–∏ —Ç–µ–±–µ –ø–æ–¥—Ö–æ–¥—è—Ç —É—Å–ª–æ–≤–∏—è üëá"
        ),
        reply_markup=keyboard_conditions
    )


@dp.message_handler(lambda message: message.text == "‚≠ê–ú–Ω–µ –ø–æ–¥—Ö–æ–¥—è—Ç —É—Å–ª–æ–≤–∏—è‚≠ê")
async def agree_conditions(message: types.Message):
    await message.answer(
        "‚ùóÔ∏è–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ: –£—Å–ª–æ–≤–∏–µ –Ω–∏–∂–µ –Ω–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ —Å—Ç–∞–∂–∏—Ä–æ–≤–æ—á–Ω—ã–π –ø–µ—Ä–∏–æ–¥ (7 –¥–Ω–µ–π)!\n\n"
        "‚Äî –ï—Å–ª–∏ —Ç—ã —Ä–µ—à–∏—à—å –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 7 –¥–Ω–µ–π "
        "—Å –º–æ–º–µ–Ω—Ç–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n\n"
        "–¢–µ–ø–µ—Ä—å –¥–∞–≤–∞–π –Ω–∞—á–Ω—ë–º —Å –ø—Ä–æ—Å—Ç–æ–≥–æ ‚Äî –∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?",
        reply_markup=ReplyKeyboardRemove()
    )
    await Form.waiting_for_name.set()


@dp.message_handler(state=Form.waiting_for_name)
async def get_name(message: types.Message, state: FSMContext):
    name = message.text.strip()
    await state.update_data(name=name)
    await message.answer(
        f"–ö—Ä–∞—Å–∏–≤–æ–µ –∏–º—è, {name}! üåü\n\n"
        f"{name}, —Ç—ã –∑–Ω–∞–∫–æ–º(-–∞) —Å —Ä–∞–±–æ—Ç–æ–π –Ω–∞ OnlyFans?",
        reply_markup=keyboard_yes_no
    )
    await Form.waiting_for_onlyfans.set()


@dp.message_handler(state=Form.waiting_for_onlyfans)
async def onlyfans_answer(message: types.Message, state: FSMContext):
    data = await state.get_data()
    name = data.get("name")

    if message.text == "–î–∞":
        await message.answer(f"–û—Ç–ª–∏—á–Ω–æ, {name}! –¢–æ–≥–¥–∞ –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ –±—É–¥–µ—Ç –ø—Ä–æ—â–µ ‚úÖ")
    elif message.text == "–ù–µ—Ç":
        await message.answer(f"–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, {name}, —è –≤—Å—ë –æ–±—ä—è—Å–Ω—é —Å –Ω—É–ª—è üòâ")
    else:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏: –î–∞ –∏–ª–∏ –ù–µ—Ç", reply_markup=keyboard_yes_no)
        return

    # –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å, –µ—Å–ª–∏ –¥–∞–ª—å—à–µ –±—É–¥–µ—Ç –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
    await state.finish()


# --- –ó–∞–ø—É—Å–∫ ---
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
